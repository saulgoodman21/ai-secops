version: 0.2
env:
  variables:
    IMAGE_NAME: "ai-secops"
    CONTAINER_NAME: "app"  #new Added
    AWS_REGION: "eu-north-1"
    ECR_URI: "701849096530.dkr.ecr.eu-north-1.amazonaws.com/ai-secops"
phases:
  install:
    runtime-versions:
      python: 3.11
    commands:
      - pip install -r app/requirements.txt
      - pip install pytest bandit "safety==2.3.5" trufflehog # - pip install pytest bandit safety trufflehog
      # - curl -fsSL https://get.docker.com | sh
      # - echo "Build env ready"
      # optional sanity check:
      - docker --version
  pre_build:
    commands:
      - pytest -q
      - bandit -r app -ll -f json -o bandit.json || true
      - safety check --json > safety.json || true
      - trufflehog filesystem --json . > secrets.json || true || trufflehog --json . > secrets.json || true  # - trufflehog filesystem --path . --json > secrets.json || true # - trufflehog filesystem --directory . --json > secrets.json || true
      - python scripts/evaluate_gates.py   # exits non-zero on High/Critical
  build:
    commands:
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_URI
      - docker build -t $IMAGE_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION .
      - docker tag $IMAGE_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION $ECR_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - docker push $ECR_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - aws ecr start-image-scan --repository-name $IMAGE_NAME --image-id imageTag=$CODEBUILD_RESOLVED_SOURCE_VERSION
      - python scripts/check_ecr_scan.py  # poll ECR scan; fail on High/Critical
  # post_build:
  #   commands:
      # - echo '[{"name":"'"$IMAGE_NAME"'","imageUri":"'"$ECR_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION"'"}]' > imagedefinitions.json
      # - cat imagedefinitions.json   # Debugging: confirm file content
  post_build:
    commands:
      - |
        python - <<'PY' > imagedefinitions.json
        import json, os
        obj = [{
          "name": os.environ["CONTAINER_NAME"],
          "imageUri": f'{os.environ["ECR_URI"]}:{os.environ["CODEBUILD_RESOLVED_SOURCE_VERSION"]}'
        }]
        print(json.dumps(obj))
        PY
      - echo "----- imagedefinitions.json -----"
      - cat imagedefinitions.json



artifacts:
  files:
    - imagedefinitions.json
    - bandit.json
    - safety.json
    - secrets.json